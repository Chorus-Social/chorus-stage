"""

Revision ID: 7ff6d5cbf5b0
Revises: 4b819fc59ba9
Create Date: 2025-10-17 09:01:07.079228

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7ff6d5cbf5b0'
down_revision: Union[str, Sequence[str], None] = '4b819fc59ba9'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('system_clock',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('day_seq', sa.BigInteger(), nullable=False),
    sa.Column('hour_seq', sa.BigInteger(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('community', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('community', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.alter_column('community', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('community_id_seq'::regclass)"))
    op.add_column('direct_message', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.alter_column('direct_message', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.add_column('moderation_case', sa.Column('closed_order_index', sa.Numeric(precision=38, scale=0), nullable=True))
    op.add_column('moderation_case', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('moderation_case', sa.Column('closed_at', sa.DateTime(), nullable=True))
    op.add_column('moderation_trigger', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('moderation_vote', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('post', sa.Column('author_pubkey', sa.LargeBinary(), nullable=False))
    op.add_column('post', sa.Column('harmful_vote_count', sa.Integer(), nullable=False))
    op.add_column('post', sa.Column('upvotes', sa.Integer(), nullable=False))
    op.add_column('post', sa.Column('downvotes', sa.Integer(), nullable=False))
    op.add_column('post', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('post', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.alter_column('post', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('post_id_seq'::regclass)"))
    op.alter_column('post', 'order_index',
               existing_type=sa.NUMERIC(precision=38, scale=0),
               type_=sa.Integer(),
               existing_nullable=False)
    op.alter_column('post', 'author_user_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.alter_column('post', 'community_id',
               existing_type=sa.BIGINT(),
               nullable=True)
    op.add_column('post_vote', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('user_account', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.add_column('user_account', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.alter_column('user_account', 'id',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('user_account_id_seq'::regclass)"))
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_account', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('user_account_id_seq'::regclass)"))
    op.drop_column('user_account', 'updated_at')
    op.drop_column('user_account', 'created_at')
    op.drop_column('post_vote', 'created_at')
    op.alter_column('post', 'community_id',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('post', 'author_user_id',
               existing_type=sa.BIGINT(),
               nullable=False)
    op.alter_column('post', 'order_index',
               existing_type=sa.Integer(),
               type_=sa.NUMERIC(precision=38, scale=0),
               existing_nullable=False)
    op.alter_column('post', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('post_id_seq'::regclass)"))
    op.drop_column('post', 'updated_at')
    op.drop_column('post', 'created_at')
    op.drop_column('post', 'downvotes')
    op.drop_column('post', 'upvotes')
    op.drop_column('post', 'harmful_vote_count')
    op.drop_column('post', 'author_pubkey')
    op.drop_column('moderation_vote', 'created_at')
    op.drop_column('moderation_trigger', 'created_at')
    op.drop_column('moderation_case', 'closed_at')
    op.drop_column('moderation_case', 'created_at')
    op.drop_column('moderation_case', 'closed_order_index')
    op.alter_column('direct_message', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.drop_column('direct_message', 'created_at')
    op.alter_column('community', 'id',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('community_id_seq'::regclass)"))
    op.drop_column('community', 'updated_at')
    op.drop_column('community', 'created_at')
    op.drop_table('system_clock')
    # ### end Alembic commands ###
