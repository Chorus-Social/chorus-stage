services:
  chorus_live:
    container_name: chorus_live
    image: postgres
    restart: unless-stopped
    ports:
      # bind container port 5432 to host localhost so other host apps can
      # connect using localhost:5432
      - 5432:5432
    volumes:
      - chorus_live_data:/var/lib/postgresql/data
    networks:
      - chorus-network
    # set shared memory limit when using docker compose
    shm_size: 128mb
    # or set shared memory limit when deploy via swarm stack
    #volumes:
    #  - type: tmpfs
    #    target: /dev/shm
    #    tmpfs:
    #      size: 134217728 # 128*2^20 bytes = 128Mb
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_DB: ${POSTGRES_DB}

  chorus_testing:
    container_name: chorus_testing
    image: postgres
    restart: unless-stopped
    ports:
      - 5433:5432
    volumes:
      - chorus_testing_data:/var/lib/postgresql/data
    networks:
      - chorus-network
    shm_size: 128mb
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_TEST_PASSWORD}
      POSTGRES_USER: ${POSTGRES_TEST_USER}
      POSTGRES_DB: ${POSTGRES_TEST_DB}

  chorus_redis:
    container_name: chorus_redis
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - 6379:6379
    networks:
      - chorus-network
    volumes:
      - chorus_redis_data:/data

  adminer:
    image: adminer
    container_name: adminer
    depends_on:
      - chorus_live
      - chorus_testing
    restart: always
    ports:
      - 5532:8080
    networks:
      - chorus-network

volumes:
  chorus_live_data:
    driver: local
  chorus_testing_data:
    driver: local
  chorus_redis_data:
    driver: local

networks:
  chorus-network: {}
