name: CI Checks

on:
  push:
    branches: [ "dev" ]

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # A sequence of tasks that will be executed as part of the job
    steps:
      # Step 1: Checks out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Sets up the Python environment
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      # Step 2.5: Caches Poetry dependencies to speed up subsequent runs
      - name: Cache Poetry dependencies
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}

      # Step 3: Installs Poetry
      - name: Install Poetry
        uses: snok/install-poetry@v1

      # Step 4: Installs your project's dependencies using the poetry.lock file
      - name: Install dependencies
        run: poetry install

      # Step 5: Runs the linter to check for code style and errors
      - name: Run Pylint
        run: poetry run pylint . # The '.' targets all files in the current directory

      # Step 6: Runs your tests
      - name: Run tests
        run: poetry run pytest