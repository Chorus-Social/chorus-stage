# Testing Dockerfile for Chorus Stage
# Python 3.14, Poetry, FastAPI with Uvicorn + testing tools

FROM python:3.14-slim

# Set environment variables
ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1 \
    POETRY_NO_INTERACTION=1 \
    POETRY_VENV_IN_PROJECT=1 \
    POETRY_CACHE_DIR=/tmp/poetry_cache

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/*

# Install Poetry
RUN pip install poetry==1.8.3

# Set work directory
WORKDIR /app

# Copy Poetry configuration files
COPY pyproject.toml poetry.lock ./

# Install all dependencies (including dev and test dependencies)
RUN poetry config virtualenvs.create true && \
    poetry config virtualenvs.in-project true && \
    poetry install --no-root && \
    rm -rf $POETRY_CACHE_DIR

# Add virtual environment to PATH and Python path
ENV PATH="/app/.venv/bin:$PATH" \
    PYTHONPATH="/app/src"

# Copy application code
COPY src/ ./src/
COPY tests/ ./tests/
COPY migrations/ ./migrations/
COPY alembic.ini ./

# Create necessary directories
RUN mkdir -p /app/keys /app/config /app/data

# Expose port
EXPOSE 8000

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD curl -f http://localhost:8000/health || exit 1

# Default command - run FastAPI app (same as production)
CMD ["python", "-m", "uvicorn", "src.chorus_stage.main:app", "--host", "0.0.0.0", "--port", "8000", "--workers", "1"]
